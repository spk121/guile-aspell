#!/bin/sh

# Usage: uninstalled-env [ARGS]

# This script arranges for the environment to support running Guile
# from the build tree.  The following env vars are modified (but not
# clobbered): GUILE_LOAD_PATH, LTDL_LIBRARY_PATH, and PATH.

# Example: uninstalled-env guile -c '(display "hello\n")'
# Example: ../../uninstalled-env ./guile-test-foo


# env (set by configure)
top_srcdir="@abs_top_srcdir@"
top_builddir="@abs_top_builddir@"

[ x"$top_srcdir"   = x -o ! -d "$top_srcdir" -o \
  x"$top_builddir" = x -o ! -d "$top_builddir" ] && {
    echo $0: bad environment
    echo top_srcdir=$top_srcdir
    echo top_builddir=$top_builddir
    exit 1
}

if [ x"$GUILE_LOAD_PATH" = x ]
then
    GUILE_LOAD_PATH="${top_srcdir}"
    if test "${top_srcdir}" != "${top_builddir}"; then
        GUILE_LOAD_PATH="$GUILE_LOAD_PATH:${top_builddir}"
    fi
else
    # This hair prevents double inclusion.
    # The ":" prevents prefix aliasing.
    case x"$GUILE_LOAD_PATH" in
        x*${top_srcdir}:*) ;;
        x*${top_srcdir}) ;;
        *) GUILE_LOAD_PATH="${top_srcdir}:$GUILE_LOAD_PATH" ;;
    esac
    case x"$GUILE_LOAD_PATH" in
        x*${top_builddir}:*) ;;
        x*${top_builddir}) ;;
        *) GUILE_LOAD_PATH="${top_builddir}:$GUILE_LOAD_PATH" ;;
    esac
fi
export GUILE_LOAD_PATH

case x"$GUILE_LOAD_COMPILED_PATH" in
    x) GUILE_LOAD_COMPILED_PATH="${top_builddir}" ;;
    x*${top_builddir}:*) ;;
    x*${top_builddir}) ;;
    *) GUILE_LOAD_COMPILED_PATH="${top_builddir}:$GUILE_LOAD_COMPILED_PATH" ;;
esac
export GUILE_LOAD_COMPILED_PATH

# handle PATH (no clobber)
PATH="${top_srcdir}:${PATH}"
if test "x${top_srcdir}" != "x${top_builddir}"; then
  PATH="${top_builddir}:${PATH}"
fi
export PATH

exec "$@"
0
